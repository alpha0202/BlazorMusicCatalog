@page "/"

@inject IAlbumService AlbumService

@if(albums == null)
{
    <span class="badge text-bg-secondary"><em>Loading...</em></span>
}
else
{
    <div class="container">
        <div class="card m-3 p-0 border-0">
            <div class="card-body mx-0 px-0">
                <h1 class="text-center text-muted">Albums</h1>
                <table class="table">
                    <thead>
                        <tr>
                            <td colspan="2"><a href="/AlbumAdd">Add New Album</a></td>
                        </tr>
                    </thead>
                </table>

            </div>
        </div>
    </div>
    <br />
    <div class="container">
        @for (int i = 0; i < NumberOfRows; i++)
        {
            <div class="card  m-3 p-0 border-0">
                <div class="card-body mx-0 px-0">
                    <div class="row">
                        @foreach (var album in albums.Skip(i * 3).Take(3))
                        {
                            <div class="col-xs-6 col-md-6">
                                <div>
                                    <a href="/albumView/@album.Id">
                                        <img src="data:image/png;base64,@(Convert.ToBase64String(album.CoverImage))">
                                    </a>

                                </div>
                                <div>
                                    <h6><a class="text-primary" href="/albumView/@album.Id">@album.Author - @album.Title</a></h6>
                                    <a href="/AlbumAdd/@album.Id">Edit</a>
                                </div>
                            </div>
                        }
                    </div>

                </div>

            </div>
        }

    </div>
}


@code {
    IEnumerable<Album> albums;

    public int NumberOfRows { get; set; } = 10;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            albums = await AlbumService.GetAlbums();
        }
        catch (Exception)
        {
            
            throw;
        }
    }


}
