@using System.IO

<table class="table table-bordered">
    <tr>
        <td>Name</td>
         <td><input  type="text" @bind="song.Name"/></td>
    </tr>
    
    <tr>
        <td>Upload</td>
        <td><InputFile OnChange="LoadSong"></InputFile></td>
        <td><input class="btn btn-primary" type="button" @onclick=@RemoveSong value="Remove"></input></td>
    </tr>
   
</table>


@code {


    [Parameter]
    public Song song { get; set; }

    [Parameter]
    public EventCallback<Song> onSongChanged{ get; set; }


    [Parameter]
    public EventCallback<Song> onSongRemoved { get; set; }


    //async Task UpdateValueSong()
    //{
    //    await onSongChanged.InvokeAsync(song);
    //}

    async Task LoadSong(InputFileChangeEventArgs e)
    {
        var folderName = Path.Combine("wwwroot", "songs");
        var pathToSave = Path.Combine(Directory.GetCurrentDirectory(), folderName);
        var fullPath = Path.Combine(pathToSave, e.File.Name.Replace(" ", "_"));

        song.Extension = e.File.Name.Substring(e.File.Name.Count() - 3, 3);
        song.Path = e.File.Name.Replace(" ", "_");

        using (var ms = new MemoryStream())

        {
            await e.File.OpenReadStream(Int32.MaxValue).CopyToAsync(ms);
            await File.WriteAllBytesAsync(fullPath, ms.ToArray());
        };
        await onSongChanged.InvokeAsync(song);
    }

    async Task RemoveSong()
    {
        await onSongRemoved.InvokeAsync(song);
    }



}
